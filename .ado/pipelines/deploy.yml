parameters:
  - name: id
    type: string
  - name: env
    type: string
    default: 'dev'
  - name: type
    type: string
  - name: dependsOn
    type: string
  - name: regions
    type: object
    default: ['east', 'west']
  - name: secrets
    type: object
    default: []

stages:
- stage: deploy_${{ parameters.id }}
  displayName: 'Deploy ${{ parameters.id }}'
  dependsOn: ${{ parameters.dependsOn }}

  jobs:
    - ${{ if eq(parameters.type, 'qa-signoff') }}:
      - job: qa_signoff
        displayName: QA Signoff
        steps:
        - script: echo manual qa-signoff

    - ${{ if ne(parameters.type, 'qa-signoff') }}:
      - job: begin_${{parameters.type}}_deploy
        displayName: Begin ${{parameters.type}} deploy
        steps:
        - checkout: templates
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: state
            path: $(System.DefaultWorkingDirectory)/variables
        - script: |
            python process_regions.py ${BUILD_SOURCESDIRECTORY}/variables/state.ini
            echo "##vso[task.setvariable variable=deploymentRegions;isOutput=true]$(cat regions.json)"
          displayName: Process regions 
          workingDirectory: $(System.DefaultWorkingDirectory)/scripts

    - ${{ if eq(parameters.type, 'openshift') }}:
      - ${{ each region in parameters.regions }}:
        - job: deploy_${{parameters.type}}_${{region}}
          displayName: Deploy ${{parameters.type}} ${{region}}
          dependsOn: begin_${{parameters.type}}_deploy
          steps:
          - checkout: templates
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: state
              path: $(System.DefaultWorkingDirectory)/variables
          - script: chmod +x export_state.sh && ./export_state.sh ${BUILD_SOURCESDIRECTORY}/variables/state.ini deploy_${{parameters.id}}
            displayName: Export state
            workingDirectory: $(System.DefaultWorkingDirectory)/scripts
          - script: env | sort
            displayName: List all variables

    - ${{ if eq(parameters.type, 'windows') }}:
      - job: deploy_${{parameters.type}}
        displayName: Deploy ${{parameters.type}}
        dependsOn: begin_${{parameters.type}}_deploy
        steps:
        - checkout: templates
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: state
            path: $(System.DefaultWorkingDirectory)/variables
        - script: chmod +x export_state.sh && ./export_state.sh ${BUILD_SOURCESDIRECTORY}/variables/state.ini deploy_${{parameters.id}}
          displayName: Export state
          workingDirectory: $(System.DefaultWorkingDirectory)/scripts
        - script: env | sort
          displayName: List all variables

    - ${{ if ne(parameters.type, 'qa-signoff') }}:
      - job: end_${{parameters.type}}_deploy
        displayName: End ${{parameters.type}} deploy
        dependsOn: 
          - begin_${{parameters.type}}_deploy
          - ${{ each region in parameters.regions }}:
            - deploy_${{parameters.type}}_${{region}}
        steps:
          - script: echo AutoCRQ...
            displayName: AutoCRQ
