parameters:
  - name: id
    type: string
  - name: env
    type: string
    default: 'dev'
  - name: type
    type: string
  - name: dependsOn
    type: string
  - name: regions
    type: object
    default: ['east', 'west']
  - name: secrets
    type: object
    default: []

stages:
- stage: deploy_${{ parameters.id }}
  displayName: 'Deploy ${{ parameters.id }}'
  dependsOn: ${{ parameters.dependsOn }}

  jobs:
    - ${{ if eq(parameters.type, 'qa-signoff') }}:
      - job: qa_signoff
        displayName: QA Signoff
        steps:
        - script: echo manual qa-signoff

    - ${{ if eq(parameters.type, 'openshift') }}:
      - ${{ each region in parameters.regions }}:
        - job: deploy_${{parameters.type}}_${{region}}
          displayName: Deploy ${{parameters.type}} ${{region}}
          steps:
          - checkout: templates
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: state
              path: $(System.DefaultWorkingDirectory)/variables

          - script: |
              chmod +x export_state.sh && ./export_state.sh ${BUILD_SOURCESDIRECTORY}/variables/state.ini deploy_${{parameters.id}}_${{region}}
              for secret in "${{ parameters.secrets }}"; do
                echo "##vso[task.setvariable variable=$(key);isSecret=true]$(value)"
              done
            displayName: Export state
            workingDirectory: $(System.DefaultWorkingDirectory)/scripts
            env:
              secrets: ${{ parameters.secrets }}

          - script: env | sort
            displayName: List all variables

    - ${{ if eq(parameters.type, 'windows') }}:
      - job: deploy_${{parameters.type}}
        displayName: Deploy ${{parameters.type}}
        steps:
        - checkout: templates
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: state
            path: $(System.DefaultWorkingDirectory)/variables
        - script: chmod +x export_state.sh && ./export_state.sh ${BUILD_SOURCESDIRECTORY}/variables/state.ini deploy_${{parameters.id}}_${{region}}
          displayName: Export state
          workingDirectory: $(System.DefaultWorkingDirectory)/scripts
        - script: env | sort
          displayName: List all variables
