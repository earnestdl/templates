parameters:
  - name: id
    type: string
  - name: state
    type: string
  - name: type
    type: string

stages:
- stage: build_${{ parameters.id }}
  displayName: 'Build ${{ parameters.id }}'

  jobs:
    - job: validate
      displayName: Validate
      variables:
        - name: system.debug
          value: true
      steps:
        - checkout: templates
        - checkout: self
        
        - script: env | sort
          displayName: List environment variables

        - script: python validate.py $(System.DefaultWorkingDirectory)/${BUILD_REPOSITORY_NAME}/.ado/pipelines/${{ parameters.state }} validation.json state.ini
          displayName: Validate pipeline
          workingDirectory: $(System.DefaultWorkingDirectory)/templates/scripts/validation

        - script: | 
            cat $(System.DefaultWorkingDirectory)/templates/scripts/validation/state.ini
          displayName: Validated variables state

        - publish: $(System.DefaultWorkingDirectory)/templates/scripts/validation/state.ini
          artifact: state

    - job: Build
      dependsOn: validate
      steps:
        - checkout: templates
        - checkout: self

        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: state
            path: $(System.DefaultWorkingDirectory)/variables

        - script: |
            OUTPUT_FILE=variables.sh 
            awk -v RS= '/\[build_${{parameters.id}}\]/' ${BUILD_SOURCESDIRECTORY}/variables/state.ini > $OUTPUT_FILE
            sed -i -e '1d' -e 's/ \?= \?/=/g' $OUTPUT_FILE
            cat $OUTPUT_FILE
            export $(cat $OUTPUT_FILE | xargs) 
            env | sort
          displayName: Export state

        - script: |
            chmod +x export_state.sh
            ./export_state.sh ${BUILD_SOURCESDIRECTORY}/variables/state.ini build_${{parameters.id}}
          displayName: Export state
          workingDirectory: $(System.DefaultWorkingDirectory)/templates/scripts

        - script: env | sort
          displayName: List all variables
