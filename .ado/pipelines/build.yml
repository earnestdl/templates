parameters:
  - name: id
    type: string
  - name: state
    type: string
  - name: type
    type: string
    values:
      - container
      - windows

stages:
- stage: build_${{ parameters.id }}
  displayName: 'Build ${{ parameters.id }}'

  jobs:
    - job: validate
      displayName: Validate
      steps:
        - checkout: templates
        - checkout: self
        - script: | 
            python validate.py $(System.DefaultWorkingDirectory)/${BUILD_REPOSITORY_NAME}/.ado/pipelines/${{ parameters.state }}
            echo "##vso[task.setvariable variable=deploymentRegions;isOutput=true]$(cat regions.json)"
          displayName: Validate pipeline
          workingDirectory: $(System.DefaultWorkingDirectory)/templates/scripts/validation
        - publish: $(System.DefaultWorkingDirectory)/templates/scripts/validation/state.ini
          artifact: state

    - ${{ if eq(parameters.type, 'container') }}:
      - job: build_${{parameters.type}}
        displayName: Build ${{parameters.type}}
        dependsOn: validate
        steps:
          - checkout: templates
          - checkout: self
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: state
              path: $(System.DefaultWorkingDirectory)/variables
          - script: chmod +x export_state.sh && ./export_state.sh ${BUILD_SOURCESDIRECTORY}/variables/state.ini build_${{parameters.id}}
            displayName: Export state
            workingDirectory: $(System.DefaultWorkingDirectory)/templates/scripts
          - script: env | sort
            displayName: List all variables

          - script: echo Building for container...
            displayName: Building Application

    - ${{ if eq(parameters.type, 'windows') }}:
      - job: build_${{parameters.type}}
        displayName: Build ${{parameters.type}}
        dependsOn: validate
        steps:
          - checkout: templates
          - checkout: self
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: state
              path: $(System.DefaultWorkingDirectory)/variables
          - script: echo "TODO - write the powershell version of export_state.sh" 
            displayName: Export state
            workingDirectory: $(System.DefaultWorkingDirectory)/templates/scripts
          - script: env | sort
            displayName: List all variables

          - script: echo Building for Windows...
            displayName: Build Application
