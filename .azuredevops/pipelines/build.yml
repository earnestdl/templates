parameters:
  - name: id
    type: string
  - name: type
    type: string
  - name: state
    type: string
  - name: regions
    type: object
    default: ["default"]
  - name: secrets
    type: object
    default: []
  - name: dryrun
    type: boolean
    default: false

stages:
- stage: build_${{ parameters.id }}
  displayName: 'Build ${{ parameters.id }}'

  jobs:
    - ${{ if or(eq(parameters.type,'default'),eq(parameters.type,'bash'),eq(parameters.type,'python'),eq(parameters.type,'container')) }}:
      - ${{ each region in parameters.regions }}:
        - job: build_${{parameters.id}}_${{region}}
          displayName: Build ${{parameters.type}}
          steps:

            - template: get-state.yml
              parameters: 
                state: ${{parameters.state}}

            - template: set-state.yml
              parameters:
                id: ${{parameters.id}} 
                stage: build
                region: ${{region}}
                regions: ${{parameters.regions}}
                secrets: ${{parameters.secrets}}

            - ${{if eq(parameters.dryrun,false)}}:
              - script: |
                  echo ${PRE_SCRIPT} ${PRE_SCRIPT_ARGS}
                  echo ${APP_BUILD_COMMAND} ${APP_BUILD_ARGS}
                  echo ${POST_SCRIPT} ${POST_SCRIPT_ARGS}
                displayName: BUILD

            - ${{if eq(parameters.dryrun,true)}}:
              - script: |
                  echo ${PRE_SCRIPT} ${PRE_SCRIPT_ARGS}
                  echo ${APP_BUILD_COMMAND} ${APP_BUILD_ARGS}
                  echo ${POST_SCRIPT} ${POST_SCRIPT_ARGS}
                displayName: BUILD (dry run)

    - ${{ if or(eq(parameters.type,'windows'), eq(parameters.type,'powershell')) }}:
      - job: build_${{parameters.type}}
        displayName: Build ${{parameters.type}}
        dependsOn: validate_${{parameters.type}}_build
        steps:
          - checkout: templates
          - checkout: self
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: state
              path: $(System.DefaultWorkingDirectory)/build-artifacts
          - script: echo "TODO - write the powershell version of export_state.sh" 
            displayName: Export state
            workingDirectory: $(System.DefaultWorkingDirectory)/templates/scripts
          - script: env | sort
            displayName: List all variables

          - script: echo Building for Windows...
            displayName: Build application
