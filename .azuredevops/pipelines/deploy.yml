parameters:
  - name: id
    type: string
  - name: env
    type: string
    default: 'build'
  - name: type
    type: string
  - name: dependsOn
    type: string
  - name: regions
    type: object
    default: ['default']
  - name: secrets
    type: object
    default: []
  - name: dryrun
    type: boolean
    default: false

stages:
- stage: deploy_${{ parameters.id }}
  displayName: 'Deploy ${{ parameters.id }}'
  dependsOn: ${{ parameters.dependsOn }}

  jobs:
    - ${{ if eq(parameters.type, 'qa-signoff') }}:
      - job: qa_signoff
        displayName: QA Signoff
        steps:
        - script: echo manual qa-signoff

    - ${{ if or(eq(parameters.type,'default'),eq(parameters.type,'bash'),eq(parameters.type,'python'),eq(parameters.type,'openshift')) }}:
      - ${{ each region in parameters.regions }}:
        - job: deploy_${{parameters.type}}_${{region}}
          displayName: Deploy ${{parameters.type}} ${{region}}
          steps:
          - checkout: templates
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: build-artifacts
              path: $(System.DefaultWorkingDirectory)/build-artifacts

          - script: | 
              python export-state.py deploy_${{parameters.id}}_${{region}} $(System.DefaultWorkingDirectory)/build-artifacts/state.ini "$SECRETS" "$REGIONS" 
              chmod +x deploy_${{parameters.id}}_${{region}}.sh && source deploy_${{parameters.id}}_${{region}}.sh 
            displayName: Export state
            workingDirectory: $(System.DefaultWorkingDirectory)/scripts/process
            env:
              SECRETS: "${{convertToJson(parameters.secrets)}}"
              REGIONS: "${{convertToJson(parameters.regions)}}"

          - script: env | sort
            displayName: List all variables

          - ${{ if eq(parameters.dryrun,'true') }}:
            - script: echo Dry run of deployment...
              displayName: Deploy ${{parameters.type}} (dry run)

          - ${{ if eq(parameters.dryrun,'false') }}:
            - script: echo Deploying...
              displayName: Deploy ${{parameters.type}}

    - ${{ if or(eq(parameters.type,'windows'), eq(parameters.type,'powershell')) }}:
      - job: deploy_${{parameters.type}}
        displayName: Deploy ${{parameters.type}}
        steps:
        - checkout: templates
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: build-artifacts
            path: $(System.DefaultWorkingDirectory)/build-artifacts
        - script: chmod +x export_state.sh && ./export_state.sh ${BUILD_SOURCESDIRECTORY}/build-artifacts/state.ini deploy_${{parameters.id}}_${{region}}
          displayName: Export state
          workingDirectory: $(System.DefaultWorkingDirectory)/scripts/process
        - script: env | sort
          displayName: List all variables
